import Head from "next/head";
import ora from "ora";
import { DateSelection, SceneSelector } from "../lib/components/Selectors";
import { Shows } from "../lib/components/Shows";
import { StickyNavigation } from "../lib/components/StickyNavigation";
import { useDateInView } from "../lib/hooks/useDateInView";
import { useShows } from "../lib/hooks/useShows";
import { fetchAllShows } from "../lib/scraper/fetchAllShows.mjs";
import styles from "../styles/Home.module.css";

const title = "OSLO";

export default function Program({ scenes, allShows }) {
  const shows = useShows(allShows);
  const { newestDate, oldestDate } = useDateInView(shows);

  return (
    <div className={styles.container}>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by a magician" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>{title}</h1>
        <hr />

        <SceneSelector
          scenes={scenes}
          selected={shows.scene}
          setSelected={shows.setScene}
        />
        <hr />
        <DateSelection
          dateOption={shows.dateOption}
          setDateOption={shows.setDateOption}
        />
        <StickyNavigation
          startDate={newestDate}
          endDate={oldestDate}
          dateOption={shows.dateOption}
          scene={shows.scene}
        />
        <Shows showsToRender={shows.showsToRender} />
      </main>

      <footer className={styles.footer}>¬©hansmaast</footer>
    </div>
  );
}

export async function getStaticProps() {
  let allShows = [];
  let scenes = [];

  // if dev, use mock data
  if (process.env.NODE_ENV === "development") {
    ora().succeed("Using mock data, in development üöß");
    const fs = require("fs");
    allShows = JSON.parse(fs.readFileSync("./lib/scraper/mockData.json"));
    scenes = [...new Set(allShows.map((show) => show.scene))];
  } else {
    ora().start("Fetching consert data üèóÔ∏è");
    allShows = await fetchAllShows();
    scenes = [...new Set(allShows.map((show) => show.scene))];
    ora().succeed("Fetched consert data üèóÔ∏è");

    // if prod, save mock data
    const fs = require("fs");
    fs.writeFileSync("./lib/scraper/mockData.json", JSON.stringify(allShows));
  }

  return {
    props: {
      scenes,
      allShows: JSON.parse(JSON.stringify(allShows)),
    },
  };
}
